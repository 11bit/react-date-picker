{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cl",
				"className"
			],
			[
				"date",
				"dateFormat"
			],
			[
				"getPre",
				"getPrevViewName"
			],
			[
				"cla",
				"classes"
			],
			[
				"getNext",
				"getNextViewName"
			],
			[
				"view",
				"viewName"
			],
			[
				"vie",
				"viewName"
			],
			[
				"getVie",
				"getViewName"
			],
			[
				"getView",
				"getViewDate"
			],
			[
				"MONTH",
				"MONTH_FIRST"
			],
			[
				"handle",
				"handlePrevNav"
			],
			[
				"MON",
				"MONTH_FIRST"
			],
			[
				"wi",
				"width"
			],
			[
				"r",
				"return"
			],
			[
				"node",
				"node_modules"
			],
			[
				"Entit",
				"EntityGrid"
			],
			[
				"Entity",
				"EntityPropertiesDataList"
			],
			[
				"onLoad",
				"onLoadSuccess"
			],
			[
				"toolbar",
				"toolbarItems"
			],
			[
				"prepareT",
				"prepareToolbarItems"
			],
			[
				"req",
				"request"
			],
			[
				"user",
				"username"
			],
			[
				"value",
				"valueToSql"
			],
			[
				"pr",
				"primaryKey"
			],
			[
				"prp",
				"preparedData"
			],
			[
				"preparedd",
				"preparedData"
			],
			[
				"paramete",
				"parameterized"
			],
			[
				"where",
				"whereConditions"
			],
			[
				"sql",
				"sqlQuery"
			],
			[
				"colu",
				"getInsertColumns"
			],
			[
				"into",
				"intoToString"
			],
			[
				"crea",
				"createToString"
			],
			[
				"app",
				"appConfig"
			],
			[
				"columns",
				"columnsToString"
			],
			[
				"Inte",
				"IntegerType"
			],
			[
				"C",
				"COMPILER"
			],
			[
				"String",
				"StringType"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/index.jsx",
			"settings":
			{
				"buffer_size": 8803,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 431,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 2152,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.styl",
			"settings":
			{
				"buffer_size": 56,
				"line_ending": "Unix"
			}
		},
		{
			"file": "style/index.styl",
			"settings":
			{
				"buffer_size": 108,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/utils/asConfig.js",
			"settings":
			{
				"buffer_size": 725,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 10 files for \"format\"\n\n/home/radu/code/react-date-picker/src/DecadeView.jsx:\n    5  var copy   = require('copy-utils').copy\n    6  \n    7: var FORMAT   = require('./utils/format')\n    8  var asConfig = require('./utils/asConfig')\n    9  var toMoment = require('./toMoment')\n   ..\n   91  \n   92      renderYear: function(date, index, arr) {\n   93:         var yearText = FORMAT.year(date)\n   94          var classes = [\"dp-cell dp-year\"]\n   95  \n\n/home/radu/code/react-date-picker/src/MonthView.jsx:\n    5  var copy   = require('copy-utils').copy\n    6  \n    7: var FORMAT   = require('./utils/format')\n    8  var asConfig = require('./utils/asConfig')\n    9  var toMoment = require('./toMoment')\n   ..\n   18  \n   19      /**\n   20:      * Formats the given date in the specified format.\n   21:      * @method format\n   22       *\n   23       * @param  {Date/String/Moment} value\n   24:      * @param  {String} [format] If none specified, #dateFormat will be used\n   25       *\n   26       * @return {String}\n   27       */\n   28  \n   29:     formatAsDay: function(moment, dayDisplayFormat){\n   30:         return moment.format(dayDisplayFormat || 'D')\n   31      },\n   32  \n   ..\n   75          TODAY = +moment().startOf('day')\n   76  \n   77:         var viewMoment = this.props.viewMoment = toMoment(this.props.viewDate, this.props.dateFormat)\n   78  \n   79:         this.props.minDate && (this.props.minDate = +toMoment(this.props.minDate, this.props.dateFormat))\n   80:         this.props.maxDate && (this.props.maxDate = +toMoment(this.props.maxDate, this.props.dateFormat))\n   81  \n   82          if (this.props.minDate){\n   ..\n  128  \n  129      renderDay: function(date) {\n  130:         var dayText = FORMAT.day(date)\n  131          var classes = [\"dp-cell dp-day\"]\n  132  \n  ...\n  204  copy({\n  205      getHeaderText: function(moment) {\n  206:         return toMoment(moment).format('MMMM YYYY')\n  207      }\n  208  }, MonthView)\n\n/home/radu/code/react-date-picker/src/YearView.jsx:\n    5  var copy   = require('copy-utils').copy\n    6  \n    7: var FORMAT   = require('./utils/format')\n    8  var asConfig = require('./utils/asConfig')\n    9  var toMoment = require('./toMoment')\n   ..\n   86  \n   87      renderMonth: function(date) {\n   88:         var monthText = FORMAT.month(date)\n   89          var classes = [\"dp-cell dp-month\"]\n   90  \n   ..\n  110  copy({\n  111      getHeaderText: function(moment) {\n  112:         return toMoment(moment).format('YYYY')\n  113      }\n  114  }, YearView)\n\n/home/radu/code/react-date-picker/src/config.js:\n   11      weekStartDay: 0,\n   12  \n   13:     //the format in which days should be displayed in month view\n   14:     dayFormat: 'D',\n   15  \n   16:     //the format in which months should be displayed in year view\n   17:     monthFormat: 'MMMM',\n   18  \n   19:     //the format in which years should be displayed in decade view\n   20:     yearFormat: 'YYYY',\n   21  \n   22      //text for navigating to prev period\n   ..\n   31      //the date to mark as selected in the date picker.\n   32      //Can be a Date object, a moment object or a string.\n   33:     //If it's a string, it will be parsed using dateFormat\n   34      date: null,\n   35  \n   ..\n   41      viewDate: null,\n   42  \n   43:     //if the date property is given as string, it will be parsed using this format\n   44:     dateFormat: 'YYYY-MM-DD'\n   45  }\n\n/home/radu/code/react-date-picker/src/index.jsx:\n  278  \n  279          if (typeof this.props.onNav === 'function'){\n  280:             var text = viewMoment.format(this.props.dateFormat)\n  281              var view = this.getViewName()\n  282  \n  ...\n  293  \n  294          if (typeof this.props.onNav === 'function'){\n  295:             var text = viewMoment.format(this.props.dateFormat)\n  296              var view = this.getViewName()\n  297  \n  ...\n  303          date = moment(date)\n  304  \n  305:         var text = date.format(this.props.dateFormat)\n  306  \n  307          ;(this.props.onChange || emptyFn)(date, text, event)\n  ...\n  325  \n  326          if (typeof this.props.onSelect === 'function'){\n  327:             var text = viewMoment.format(this.props.dateFormat)\n  328              this.props.onSelect(viewMoment, text, view, event)\n  329          }\n\n/home/radu/code/react-date-picker/src/toMoment.js:\n   10   *\n   11   * @param  {String/Date/Moment} value\n   12:  * @param  {String} [dateFormat] if value is string, it will be parsed to a moment using this format\n   13   * @param  {Object} [config]\n   14   * @param  {Boolean} [config.strict] whether to perform strict parsing on strings\n   15   * @return {Moment}\n   16   */\n   17: module.exports = function(value, dateFormat, config){\n   18      var strict = !!(config && config.strict)\n   19  \n   20:     dateFormat = dateFormat || CONFIG.dateFormat\n   21  \n   22      if (typeof value == 'string'){\n   23:         return moment(value, dateFormat, strict)\n   24      }\n   25  \n\n/home/radu/code/react-date-picker/src/utils/format.js:\n    4  var toMoment = require('../toMoment')\n    5  \n    6: function f(mom, format){\n    7:     return toMoment(mom).format(format)\n    8  }\n    9  \n   10  module.exports = {\n   11:     day: function(mom, format) {\n   12:         return f(mom, format || CONFIG.dayFormat)\n   13      },\n   14  \n   15:     month: function(mom, format) {\n   16:         return f(mom, format || CONFIG.monthFormat)\n   17      },\n   18  \n   19:     year: function(mom, format) {\n   20:         return f(mom, format || CONFIG.yearFormat)\n   21      }\n   22  }\n\n/home/radu/code/react-date-picker/src/utils/getWeekDayNames.js:\n    3  var moment = require('moment')\n    4  \n    5: var DEFAULT_WEEK_START_DAY = moment().startOf('week').format('d') * 1\n    6  \n    7  module.exports = function getWeekDayNames(startDay){\n\n60 matches across 8 files\n",
			"settings":
			{
				"buffer_size": 5815,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/DecadeView.jsx",
			"settings":
			{
				"buffer_size": 3035,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/utils/format.js",
			"settings":
			{
				"buffer_size": 454,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/toMoment.js",
			"settings":
			{
				"buffer_size": 763,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.jsx",
			"settings":
			{
				"buffer_size": 1398,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 4484,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/config.js",
			"settings":
			{
				"buffer_size": 1277,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build-style.config.js",
			"settings":
			{
				"buffer_size": 586,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 372.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"move",
				"File: Move"
			],
			[
				"du",
				"File: Duplicate"
			],
			[
				"makr",
				"Markdown Preview: Preview in Browser"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"d",
				"File: Duplicate"
			],
			[
				"dup",
				"File: Duplicate"
			],
			[
				"ss sas",
				"Set Syntax: Sass"
			],
			[
				"ss",
				"Set Syntax: Sass"
			],
			[
				"ss css",
				"Set Syntax: CSS"
			],
			[
				"brows",
				"Preferences: Browse Packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"ss json",
				"Set Syntax: JSON"
			],
			[
				"del",
				"File: Delete"
			],
			[
				"markdo",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markd",
				"Markdown Preview: Preview in Browser"
			],
			[
				"ss text",
				"Set Syntax: Plain Text"
			],
			[
				"jsx	",
				"Snippet: React: /** @jsx */"
			],
			[
				"ss javas",
				"Set Syntax: JavaScript"
			],
			[
				"ss ja",
				"Set Syntax: Jade"
			],
			[
				"ss js",
				"Set Syntax: JSON"
			],
			[
				"pretty j",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pretty ",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pretty json",
				"Pretty JSON: JSON 2 XML"
			],
			[
				"json p",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pretty",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"markdow",
				"Markdown Preview: Preview in Browser"
			],
			[
				"ss sa",
				"Set Syntax: Sass"
			],
			[
				"delete",
				"File: Delete"
			],
			[
				"ss sty",
				"Set Syntax: Stylus"
			],
			[
				"ss java",
				"Set Syntax: JavaScript"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"ss javasc",
				"Set Syntax: JavaScript"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"ss live",
				"Set Syntax: LiveScript"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/radu/code/react-date-picker",
		"/home/radu/code/react-date-picker/dist",
		"/home/radu/code/react-date-picker/src",
		"/home/radu/code/react-date-picker/src/utils",
		"/home/radu/code/react-date-picker/style"
	],
	"file_history":
	[
		"/home/radu/code/react-date-picker/node_modules/copy-utils/copyIf.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/node_modules/node-libs-browser/node_modules/querystring-es3/test/common-index.js",
		"/home/radu/code/react-date-picker/src/config.js",
		"/home/radu/code/react-date-picker/index.css",
		"/home/radu/code/react-date-picker/node_modules/moment/bower.json",
		"/home/radu/code/react-date-picker/node_modules/stylus-loader/node_modules/stylus/node_modules/sax/test/buffer-overrun.js",
		"/home/radu/code/react-date-picker/boilerplate.json",
		"/home/radu/code/react-date-picker/node_modules/css-utils/index.styl",
		"/home/radu/code/react-date-picker/resources/style/index.styl",
		"/home/radu/code/react-date-picker/index.html",
		"/home/radu/code/react-date-picker/src/MonthView.jsx",
		"/home/radu/code/react-date-picker/dist.min.config.js",
		"/home/radu/code/react-date-picker/browser.js",
		"/home/radu/code/react-date-picker/resources/style/theme.styl",
		"/home/radu/code/react-date-picker/README.md",
		"/home/radu/code/react-date-picker/package.json",
		"/home/radu/code/react-date-picker/lib/MonthView.js",
		"/home/radu/code/react-date-picker/node_modules/moment/moment.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/ModuleNotFoundError.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/MainTemplate.js",
		"/home/radu/code/react-date-picker/src/utils/asConfig.js",
		"/home/radu/code/react-date-picker/resources/style/constants.styl",
		"/home/radu/code/react-date-picker/index.styl",
		"/home/radu/code/react-date-picker/index.jsx",
		"/home/radu/code/react-date-picker/webpack.config.js",
		"/home/radu/code/react-date-picker/dist.config.js",
		"/home/radu/code/react-date-picker/Gulpfile.js",
		"/home/radu/code/react-date-picker/react-date-picker.sublime-project",
		"/home/radu/code/react-date-picker/src/DecadeView.jsx",
		"/home/radu/code/react-date-picker/src/YearView.jsx",
		"/home/radu/code/react-date-picker/node_modules/css-loader/node_modules/source-map/build/prefix-source-map.jsm",
		"/home/radu/code/react-date-picker/build-style.config.js",
		"/home/radu/code/react-date-picker/node_modules/gulp/node_modules/vinyl-fs/test/fixtures/bom-utf16be.txt",
		"/home/radu/pages/react-date-picker-www/index.html",
		"/home/radu/code/react-date-picker/resources/style/structure.styl",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/WebpackOptionsApply.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/web/WebEnvironmentPlugin.js",
		"/home/radu/code/react-date-picker/node_modules/http-server/node_modules/union/test/simple-test.js",
		"/home/radu/code/react-date-picker/build-script.config.js",
		"/home/radu/code/react-date-picker/node_modules/stylus-loader/test/fixtures/webpack.config-plugin.styl",
		"/home/radu/code/react-date-picker/node_modules/jsx-loader/node_modules/react-tools/node_modules/commoner/test/source/login.js",
		"/home/radu/code/react-date-picker/node_modules/webpack-dev-server/node_modules/socket.io/lib/logger.js",
		"/home/radu/code/react-date-picker/node_modules/http-server/node_modules/optimist/example/line_count_options.js",
		"/home/radu/code/react-date-picker/LICENSE",
		"/home/radu/code/react-date-picker/node_modules/moment/locale/de-at.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/JsonpHotUpdateChunkTemplatePlugin.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/node_modules/node-libs-browser/node_modules/browserify-zlib/node_modules/pako/dist/pako_deflate.js",
		"/home/radu/code/react-date-picker/node_modules/extract-text-webpack-plugin/node_modules/loader-utils/node_modules/big.js/perf/lib/bigdecimal_ICU4J/BigDecimal-all-last.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/SourceMapDevToolPlugin.js",
		"/home/radu/code/react-date-picker/node_modules/file-loader/appveyor.yml",
		"/home/radu/code/react-date-picker/node_modules/webpack-dev-server/node_modules/express/lib/application.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/AbstractPlugin.js",
		"/home/radu/code/react-date-picker/node_modules/css-loader/node_modules/loader-utils/node_modules/json5/test/parse-cases/objects/trailing-comma-object.json5",
		"/home/radu/code/react-date-picker/node_modules/moment/locale/tl-ph.js",
		"/home/radu/code/react-date-picker/node_modules/react/lib/DefaultEventPluginOrder.js",
		"/home/radu/code/react-date-picker/npm-debug.log",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/dependencies/AMDRequireArrayDependency.js",
		"/home/radu/code/react-date-picker/node_modules/react/dist/react-with-addons.js",
		"/home/radu/code/react-date-picker/node_modules/webpack-dev-server/node_modules/express/node_modules/proxy-addr/node_modules/ipaddr.js/Cakefile",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/dependencies/AMDRequireContextDependency.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/node_modules/node-libs-browser/node_modules/buffer/test/deprecated.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/lib/dependencies/TemplateArgumentDependency.js",
		"/home/radu/code/react-date-picker/node_modules/webpack/bin/config-optimist.js",
		"/home/radu/code/react-date-picker/bundle.js",
		"/home/radu/code/react-date-picker/node_modules/style-loader/addStyles.js",
		"/home/radu/code/react-date-picker/node_modules/react/lib/mapObject.js",
		"/home/radu/code/react-date-picker/node_modules/copy-utils/Makefile",
		"/home/radu/code/css-utils/styles/utils-position.styl",
		"/home/radu/code/css-utils/styles/css-utils.styl",
		"/home/radu/code/css-utils/styles/utils-ellipsis.styl",
		"/home/radu/code/css-utils/index.styl",
		"/home/radu/code/css-utils/node_modules/stylus/node_modules/mkdirp/examples/pow.js",
		"/home/radu/code/css-utils/css-utils.sublime-project",
		"/home/radu/code/css-utils/css-utils.css",
		"/home/radu/code/css-utils/node_modules/stylus/node_modules/sax/test/cdata-end-split.js",
		"/home/radu/code/css-utils/styles/utils-flex.styl",
		"/home/radu/code/css-utils/styles/utils-size.styl",
		"/home/radu/code/css-utils/node_modules/stylus/node_modules/glob/test/zz-cleanup.js",
		"/home/radu/code/css-utils/node_modules/stylus/lib/cache/null.js",
		"/home/radu/code/css-utils/node_modules/stylus/node_modules/sax/examples/not-pretty.xml",
		"/home/radu/code/css-utils/node_modules/stylus/lib/cache/fs.js",
		"/home/radu/code/entity-designer/src/resources/css/style.css",
		"/home/radu/code/entity-designer/node_modules/.bin/stylus",
		"/home/radu/code/entity-designer/node_modules/stylus/lib/nodes/keyframes.js",
		"/home/radu/code/entity-designer/node_modules/http-server/node_modules/union/test/simple-test.js",
		"/home/radu/code/entity-designer/src/resources/css/style.styl",
		"/home/radu/code/entity-designer/src/js/main.out.js",
		"/home/radu/code/entity-hapi/node_modules/bcrypt/build/config.gypi",
		"/home/radu/code/entity-hapi/node_modules/good/CONTRIBUTING.md",
		"/home/radu/code/entity-hapi/node_modules/pm2/lib/custom_options.sh",
		"/home/radu/code/entity-hapi/node_modules/bcrypt/CHANGELOG",
		"/home/radu/code/entity-hapi/logs/alchemy-sql.log",
		"/home/radu/code/entity-hapi/logs/alchemy-main.log",
		"/home/radu/code/entity-hapi/package.json",
		"/home/radu/code/entity-hapi/index.js",
		"/home/radu/code/entity-hapi/client/src/js/Viewport.js",
		"/home/radu/code/entity-hapi/test/req.js",
		"/home/radu/code/entity-hapi/API.md",
		"/home/radu/code/entity-hapi/INSTALL.md",
		"/home/radu/code/entity-hapi/routes/objects/getByName.js",
		"/home/radu/code/entity-hapi/config/index.js",
		"/home/radu/code/entity-hapi/config/index-env-test.js",
		"/home/radu/code/entity-hapi/Makefile",
		"/home/radu/code/entity-hapi/client/src/js/app.js",
		"/home/radu/code/entity-hapi/test/object.update.json",
		"/home/radu/code/entity-hapi/test/object.create.json",
		"/home/radu/code/entity-hapi/routes/objects/update.js",
		"/home/radu/code/entity-hapi/test-db.js",
		"/home/radu/code/entity-hapi/node_modules/entity-engine/node_modules/throwy/ThrowyError.js",
		"/home/radu/code/entity-hapi/client/src/js/TopToolbar.js",
		"/home/radu/code/entity-hapi/logs/http-request-log",
		"/home/radu/code/entity-hapi/routes/objects/list.js",
		"/home/radu/code/entity-hapi/node_modules/entity-engine/node_modules/.bin/knex",
		"/home/radu/code/entity-hapi/node_modules/pm2/node_modules/moment/lang/ka.js",
		"/home/radu/code/entity-hapi/node_modules/bcrypt/Makefile",
		"/home/radu/code/entity-hapi/node_modules/bunyan/node_modules/dtrace-provider/test/more-args.test.js",
		"/home/radu/code/entity-hapi/.idea/misc.xml",
		"/home/radu/code/entity-hapi/login.js",
		"/home/radu/code/entity-hapi/views/index.jade",
		"/home/radu/code/entity-hapi/node_modules/bunyan/docs/index.html",
		"/home/radu/code/entity-hapi/client/src/js/HttpPanel.js",
		"/home/radu/code/entity-hapi/client/src/js/all.js",
		"/home/radu/code/entity-hapi/engine.js",
		"/home/radu/code/entity-hapi/routes/records/create.js",
		"/home/radu/code/entity-hapi/client/src/resources/css/app.css",
		"/home/radu/code/entity-hapi/Procfile",
		"/home/radu/code/entity-hapi/node_modules/entity-engine/EntityBase.js",
		"/home/radu/code/entity-hapi/routes/entities/addProperty.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"/home/radu/code/react-date-picker/src",
			"/home/radu/code/react-date-picker",
			"/home/radu/code/css-utils/styles",
			"/home/radu/code/css-utils",
			"/home/radu/code/entity-hapi/logs",
			"/home/radu/code/entity-hapi",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"format",
			"getViewFactory",
			"factor",
			"navprev",
			"renderweekdaynames",
			"renderweekdatnames",
			"dp-month",
			";(this.props.onSelect || emptyFn)(date, event)",
			"handle",
			";(this.props.onSelect || emptyFn)(date, event)",
			"build-script",
			"getView()",
			"getView",
			"App",
			"MonthView",
			"handleClick",
			"$dp-datepicker-day-other-month-color",
			"dp-prev",
			"$dp-datepicker-day-other-month-color",
			"maxdate",
			"handleClick",
			"invalid",
			"minDate",
			"moment",
			"toMoment",
			"tomoment",
			"asconfig",
			"this.props.date",
			"format",
			"minDate",
			"value",
			"handlePrevNav",
			"handleNextNav",
			"today",
			".add",
			"console",
			"getNextViewName",
			"handleViewChange",
			"monthText",
			"renderMonth",
			"monthsInView",
			"renderMonths",
			"YearView",
			"getViewColspan",
			"yearVie",
			"daysInView",
			"renderDays",
			"dayText",
			"renderDay",
			"MonthView",
			"getView(",
			"getView:",
			"getView",
			"viewdate",
			"getLastMoment",
			"MONTH_LAST",
			"MONTH_FIRST",
			"add",
			"viewdate",
			"viewmoment",
			"this.props.moment",
			"getWeekDayNames",
			"dayMonth",
			"format.",
			"format",
			"TODAY",
			"renderDay",
			"getDaysForView",
			"value",
			"getDaysForView",
			"margin",
			"ellipsis",
			"property",
			" value",
			"property",
			" value",
			"property",
			"u-unselectable",
			"border",
			"bordered",
			"absolute",
			"width",
			"height",
			".z",
			"justify-content",
			"app",
			"client/",
			"onSave",
			"on_save",
			"updating",
			"curl",
			"npm run start-test && ",
			"not exist",
			"exists",
			"not found",
			"UserEntity",
			"toStyleString",
			"buid",
			"example",
			"console",
			"require('alchemy'",
			"prefix",
			"bad",
			"metadata_entity_list",
			"success: true",
			"User",
			"defaultRouteMethod",
			"info",
			"welcome",
			"request.payload",
			"flash",
			"STYLUS_DIR",
			"getInstantiatorFunction",
			"classy",
			"validate",
			"getDefaultEngine",
			"slice",
			"Select",
			"asCreate",
			"return new Promise(function(resolve, reject",
			"info",
			"preparedData",
			"valueToString",
			"isParameterized",
			"onSuccess",
			"ensureLogger",
			"is:",
			"Types"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/index.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8803,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1285.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 431,
						"regions":
						{
						},
						"selection":
						[
							[
								16,
								16
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2152,
						"regions":
						{
						},
						"selection":
						[
							[
								1240,
								1240
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "index.styl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56,
						"regions":
						{
						},
						"selection":
						[
							[
								56,
								56
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Sass/Syntaxes/Sass.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "style/index.styl",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 108,
						"regions":
						{
						},
						"selection":
						[
							[
								108,
								108
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Sass/Syntaxes/Sass.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/utils/asConfig.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 725,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5815,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										153,
										159
									],
									[
										181,
										187
									],
									[
										380,
										386
									],
									[
										575,
										581
									],
									[
										603,
										609
									],
									[
										749,
										755
									],
									[
										789,
										795
									],
									[
										819,
										825
									],
									[
										921,
										927
									],
									[
										953,
										959
									],
									[
										1052,
										1058
									],
									[
										1092,
										1098
									],
									[
										1130,
										1136
									],
									[
										1147,
										1153
									],
									[
										1347,
										1353
									],
									[
										1467,
										1473
									],
									[
										1580,
										1586
									],
									[
										1719,
										1725
									],
									[
										1896,
										1902
									],
									[
										2069,
										2075
									],
									[
										2097,
										2103
									],
									[
										2286,
										2292
									],
									[
										2467,
										2473
									],
									[
										2618,
										2624
									],
									[
										2687,
										2693
									],
									[
										2725,
										2731
									],
									[
										2797,
										2803
									],
									[
										2838,
										2844
									],
									[
										2910,
										2916
									],
									[
										3173,
										3179
									],
									[
										3335,
										3341
									],
									[
										3357,
										3363
									],
									[
										3546,
										3552
									],
									[
										3568,
										3574
									],
									[
										3748,
										3754
									],
									[
										3770,
										3776
									],
									[
										3915,
										3921
									],
									[
										3937,
										3943
									],
									[
										4139,
										4145
									],
									[
										4161,
										4167
									],
									[
										4395,
										4401
									],
									[
										4464,
										4470
									],
									[
										4678,
										4684
									],
									[
										4770,
										4776
									],
									[
										4783,
										4789
									],
									[
										4804,
										4810
									],
									[
										4901,
										4907
									],
									[
										5070,
										5076
									],
									[
										5111,
										5117
									],
									[
										5118,
										5124
									],
									[
										5199,
										5205
									],
									[
										5238,
										5244
									],
									[
										5258,
										5264
									],
									[
										5320,
										5326
									],
									[
										5359,
										5365
									],
									[
										5381,
										5387
									],
									[
										5442,
										5448
									],
									[
										5481,
										5487
									],
									[
										5502,
										5508
									],
									[
										5704,
										5710
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								155,
								155
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/DecadeView.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3035,
						"regions":
						{
						},
						"selection":
						[
							[
								116,
								116
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/utils/format.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 454,
						"regions":
						{
						},
						"selection":
						[
							[
								153,
								153
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/toMoment.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 763,
						"regions":
						{
						},
						"selection":
						[
							[
								763,
								763
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "index.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1398,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/SublimeLinter-jsxhint/JavaScript (JSX).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 11,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4484,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/config.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1277,
						"regions":
						{
						},
						"selection":
						[
							[
								429,
								429
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2152,
						"regions":
						{
						},
						"selection":
						[
							[
								1145,
								1145
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "build-style.config.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 586,
						"regions":
						{
						},
						"selection":
						[
							[
								586,
								586
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.647854524836,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clipboard_manager":
	{
		"height": 118.0
	},
	"output.exec":
	{
		"height": 328.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_sublime_load":
	{
		"height": 118.0
	},
	"project": "react-date-picker.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"config",
				"src/config.js"
			],
			[
				"ascon",
				"src/utils/asConfig.js"
			],
			[
				"pack",
				"package.json"
			],
			[
				"index.",
				"index.html"
			],
			[
				"pac",
				"package.json"
			],
			[
				"read",
				"README.md"
			],
			[
				"index.s",
				"index.styl"
			],
			[
				"packa",
				"package.json"
			],
			[
				"monthv",
				"lib/MonthView.js"
			],
			[
				"dist.min",
				"dist.min.config.js"
			],
			[
				"web",
				"webpack.config.js"
			],
			[
				"dist",
				"dist.config.js"
			],
			[
				"struc",
				"resources/style/structure.styl"
			],
			[
				"cons",
				"resources/style/constants.styl"
			],
			[
				"index",
				"index.jsx"
			],
			[
				"tomome",
				"src/toMoment.js"
			],
			[
				"decade",
				"src/DecadeView.jsx"
			],
			[
				"yearv",
				"src/YearView.jsx"
			],
			[
				"index.jsx",
				"index.jsx"
			],
			[
				"asconf",
				"src/utils/asConfig.js"
			],
			[
				"build",
				"build-script.config.js"
			],
			[
				"mont",
				"src/MonthView.jsx"
			],
			[
				"rules",
				"styles/rules.styl"
			],
			[
				"position",
				"styles/utils-position.styl"
			],
			[
				"utils-s",
				"styles/utils-size.styl"
			],
			[
				"utils-f",
				"styles/utils-flex.styl"
			],
			[
				"-app",
				"styles/utils-app.styl"
			],
			[
				"utils-bo",
				"styles/utils-box.styl"
			],
			[
				"pa",
				"package.json"
			],
			[
				"utils.s",
				"styles/utils.styl"
			],
			[
				"utils-fle",
				"styles/utils-flex.styl"
			],
			[
				"font",
				"styles/utils-font.styl"
			],
			[
				"style.s",
				"src/resources/css/style.styl"
			],
			[
				"style.css",
				"src/resources/css/style.css"
			],
			[
				"style.st",
				"src/resources/css/style.styl"
			],
			[
				"style.",
				"src/resources/css/style.css"
			],
			[
				"confi",
				"config/index.js"
			],
			[
				"test-d",
				"test-db.js"
			],
			[
				"configindex",
				"config/index.js"
			],
			[
				"insta",
				"INSTALL.md"
			],
			[
				"make",
				"Makefile"
			],
			[
				"view",
				"client/src/js/Viewport.js"
			],
			[
				"instal",
				"INSTALL.md"
			],
			[
				"configinde",
				"config/index.js"
			],
			[
				"proc",
				"Procfile"
			],
			[
				"pro",
				"~/code/entity-hapi/Procfile"
			],
			[
				"bottom",
				"client/src/js/BottomToolbar.js"
			],
			[
				"index.ja",
				"views/index.jade"
			],
			[
				"body",
				"client/src/js/Body.js"
			],
			[
				"toptoo",
				"client/src/js/TopToolbar.js"
			],
			[
				"app.",
				"client/src/js/app.js"
			],
			[
				"topt",
				"client/src/js/TopToolbar.js"
			],
			[
				"all.",
				"client/src/js/all.js"
			],
			[
				"engine",
				"engine.js"
			],
			[
				"index.a",
				"views/index.jade"
			],
			[
				"entityg",
				"client/src/js/views/entity/EntityGrid.js"
			],
			[
				"enttyg",
				"client/src/js/entity/EntityGrid.js"
			],
			[
				"entityb",
				"node_modules/entity-engine/EntityBase.js"
			],
			[
				"app.js",
				"client/src/js/app.js"
			],
			[
				"app",
				"client/src/js/app.js"
			],
			[
				"login",
				"login.js"
			],
			[
				"routesindex",
				"routes/index.js"
			],
			[
				"getme",
				"node_modules/entity-engine/getMetaTable.js"
			],
			[
				"getb",
				"routes/entities/getById.js"
			],
			[
				"engi",
				"engine.js"
			],
			[
				"entity",
				"entity.js"
			],
			[
				"hapi",
				"config/hapi.js"
			],
			[
				"passp",
				"config/passport.js"
			],
			[
				"layout",
				"views/layout.jade"
			],
			[
				"loggerindex",
				"config/logger/index.js"
			],
			[
				"layo",
				"views/layout.jade"
			],
			[
				"layout.d",
				"views/layout.jade"
			],
			[
				"www",
				"bin/www"
			],
			[
				"rea",
				"README.md"
			],
			[
				"re",
				"README.md"
			],
			[
				"colu",
				"Column.js"
			],
			[
				"ta",
				"Table.js"
			],
			[
				"createt",
				"test/CreateTable.js"
			],
			[
				"insertt",
				"test/InsertTests.js"
			],
			[
				"sele",
				"Select.js"
			],
			[
				"sql",
				"SqlStatement.js"
			],
			[
				"selectt",
				"test/SelectTests.js"
			],
			[
				"sqls",
				"SqlStatement.js"
			],
			[
				"ins",
				"Insert.js"
			],
			[
				"tab",
				"Table.js"
			],
			[
				"inser",
				"Insert.js"
			],
			[
				"update",
				"Update.js"
			],
			[
				"column",
				"Column.js"
			],
			[
				"cre",
				"test/CreateTable.js"
			],
			[
				"create",
				"test/CreateTable.js"
			],
			[
				"co",
				"Column.js"
			],
			[
				"schema",
				"SchemaElement.js"
			],
			[
				"schemae",
				"SchemaElement.js"
			],
			[
				"col",
				"Column.js"
			],
			[
				"lo",
				"loggerFactory.js"
			],
			[
				"alc",
				"alchemy.js"
			],
			[
				"en",
				"engine.js"
			],
			[
				"al",
				"alchemy.js"
			],
			[
				"selet",
				"test/SelectTests.js"
			],
			[
				"engin",
				"engine.js"
			],
			[
				"ite",
				"test/InsertTests.js"
			],
			[
				"aclhe",
				"alchemy.js"
			],
			[
				"select",
				"test/SelectTests.js"
			],
			[
				"type",
				"Types.js"
			],
			[
				"types",
				"Types.js"
			],
			[
				"db",
				"config/db.js"
			],
			[
				"c",
				"Column.js"
			],
			[
				"sche",
				"SchemaElement.js"
			],
			[
				"se",
				"SchemaElement.js"
			],
			[
				"seh",
				"SchemaElement.js"
			],
			[
				"exe",
				"execute.js"
			],
			[
				"tal",
				"Table.ls"
			],
			[
				"ty",
				"Types.js"
			],
			[
				"cte",
				"test/ColumnTests.js"
			],
			[
				"get",
				"getInstantiatorFunction.ls"
			],
			[
				"x.js",
				"x.js"
			],
			[
				"jste",
				"jstest.js"
			],
			[
				"ct",
				"test/ColumnTests.ls"
			],
			[
				"execu",
				"execute.ls"
			],
			[
				"test.",
				"test.js"
			],
			[
				"test",
				"test.ls"
			],
			[
				"columnt",
				"test/ColumnTests.ls"
			],
			[
				"table",
				"Table.ls"
			],
			[
				"in",
				"index.js"
			],
			[
				"mode",
				"src/models/Model.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"react",
				"~/code/react-menus/react-menus.sublime-project"
			],
			[
				"react-co",
				"~/code/react-color-picker/react-color-picker.sublime-project"
			],
			[
				"react-ta",
				"~/code/react-tab-panel/react-tab-panel.sublime-project"
			],
			[
				"ened",
				"~/code/entity-designer/entity-designer.sublime-project"
			],
			[
				"react-colo",
				"~/code/react-color-picker/react-color-picker.sublime-project"
			],
			[
				"enti",
				"~/code/entity-designer/entity-designer.sublime-project"
			],
			[
				"entit",
				"~/code/entity-designer/entity-designer.sublime-project"
			],
			[
				"css-ut",
				"~/code/css-utils/css-utils.sublime-project"
			],
			[
				"zi",
				"~/code/ZippyUI/zippyui.sublime-project"
			],
			[
				"copy",
				"~/code/copy-utils/copy-utils.sublime-project"
			],
			[
				"fn",
				"~/code/functionally/functionally.sublime-project"
			],
			[
				"z",
				"~/code/ZippyUI/zippyui.sublime-project"
			],
			[
				"",
				"~/code/copy-utils/copy-utils.sublime-project"
			],
			[
				"e",
				"~/code/entity-designer/entity-designer.sublime-project"
			],
			[
				"func",
				"~/code/functionally/functionally.sublime-project"
			],
			[
				"entity",
				"~/code/entity-engine/entity.sublime-workspace"
			],
			[
				"cl",
				"~/code/classy/classy.sublime-project"
			],
			[
				"a",
				"~/code/alchemy/alchemy.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 327.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
